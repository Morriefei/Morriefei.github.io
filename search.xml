<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[hexo常用插件记录]]></title>
      <url>%2F2020%2F02%2F04%2Fhexo%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E8%AE%B0%E5%BD%95%2F</url>
      <content type="text"><![CDATA[记录常用插件。 插件列表 用途说明 hexo-generator-feed RSS hexo-helper-live2d 看板娘 hexo-symbols-count-time 阅读次数/时长和访客数 hexo-neat 压缩博文 hexo-generator-index-pin-top 置顶博文 hexo-generator-searchdb 全局搜索 hexo-admin 后台管理 hexo-wordcount 字数统计]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hexo 优化记录]]></title>
      <url>%2F2020%2F02%2F03%2Fhexo%E4%BC%98%E5%8C%96%E8%AE%B0%E5%BD%95%2F</url>
      <content type="text"><![CDATA[看板娘、鼠标响应事件、可折叠内容、杂七杂八的其它 折腾记录： 因为中途把NexT从5.x版本升级到了6.x版本，“可折叠内容“部分已失效。 添加看板娘 鸣谢：xiazeyu Install seperated models use npm install {packagename} The package name is the folder name in packages/ We have: live2d-widget-model-chitose live2d-widget-model-epsilon2_1 live2d-widget-model-gf live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru) live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru) live2d-widget-model-haruto live2d-widget-model-hibiki live2d-widget-model-hijiki live2d-widget-model-izumi live2d-widget-model-koharu live2d-widget-model-miku live2d-widget-model-ni-j live2d-widget-model-nico live2d-widget-model-nietzsche live2d-widget-model-nipsilon live2d-widget-model-nito live2d-widget-model-shizuku live2d-widget-model-tororo live2d-widget-model-tsumiki live2d-widget-model-unitychan live2d-widget-model-wanko live2d-widget-model-z16 添加鼠标点击事件 鸣谢：nightmare_dimple 在/themes/next/source/js/src下新建文件 clicklove.js ，接着把下面的代码拷贝粘贴到 clicklove.js 文件中： !function(e,t,a){function n(){c(&quot;.heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}&quot;),o(),r()}function r(){for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)}function o(){var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e){t&amp;&amp;t(),i(e)}}function i(e){var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)}function s(){return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document); 在\themes\next\layout_layout.swig文件末尾添加： &lt;!-- 页面点击小红心 --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt; 跟那个红心是差不多的，首先在themes/next/source/js/src里面建一个叫fireworks.js的文件，代码如下： &quot;use strict&quot;;function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t&lt;e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl){var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)}&quot;use strict&quot;;function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t&lt;e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl){var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)}; 打开themes/next/layout/_layout.swig,在上面写下如下代码： {% if theme.fireworks %} {% endif %} 打开主题配置文件，在里面最后写下： # Fireworks fireworks: true hexo主题配置文件说明 在Hexo中有两个很重要的名为_config.yml的文件，其中一个在站点安装的根目录下，另一个在主题目录下。前者提供了Hexo自身的一些基本配置信息，后者为你所安装的主题的相关配置。为了方便区分，我们把前者称为站点配置文件，后者称为主题配置文件。 配置版权footer: # Specify the date when the site was setup. # If not defined, current year will be used. since: 2019 #建站时间 # Icon between year and copyright info. icon: # Icon name in fontawesome, see: https://fontawesome.com/v4.7.0/icons/ # `heart` is recommended with animation in red (#ff0000). name: heart #作者图标（默认是author人像) # If you want to animate the icon, set it to true. animated: true #图标是否闪动 # Change the color of icon, using Hex Code. color: &quot;#808080&quot; #图标颜色 # If not defined, `author` from Hexo main config will be used. copyright: yourname #别填bool型，最后显示的东西是copyright || author，即左边没有设置的话就显示作者 # ------------------------------------------------------------- powered: # Hexo link (Powered by Hexo). enable: false #是否显示 Powered by hexo # Version info of Hexo after Hexo link (vX.X.X). version: false #是否显示Hexo版本 theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false #是否显示主题信息 # Version info of NexT after scheme info (vX.X.X). version: false #是否显示主题版本 # ------------------------------------------------------------- # Beian icp information for Chinese users. In China, every legal website should have a beian icp in website footer. # http://www.miitbeian.gov.cn beian: enable: false #是否显示网站备案信息 icp: 其它优化内容 鸣谢：庆鹏 8. What’s more 刚折腾完 NexT 6.x 的配置，赫然发现 NexT 已经出到 7.7 版本了。生命在于折腾。 Next 7官方文档]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[2020 Best Wishes]]></title>
      <url>%2F2020%2F02%2F01%2F2020%20Best%20Wishes%2F</url>
      <content type="text"><![CDATA[瑞鼠迎春送吉祥！ 在好友 Dear Florrie 酱的协助下完成了git config 用户名和邮箱的设置，并完成了 git log 中个人隐私信息的清理。 1. 修改 git config 配置 git config --list git config --global user.name &quot;morriefei&quot; git config --global user.email &quot;morrie.fei@gmail.com&quot; git config --global unset &quot;credential.helper&quot; 2. 清理 git log 敏感信息简单粗暴方法：备份，重新push，删除原branch git checkout --orphan latest_branch git add -A git commit -am &quot;auto&quot; git branch -D master git branch -m master git push -f origin master 3. 解决node_modules缺省hexo指令执行时一直报DTraceProvider的错误。 解决方案直接卸载掉这个模组： npm uninstall dtrace-provider 自此hexo重焕新生。 完成于对称日2020.02.02。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[wordpress部署博客]]></title>
      <url>%2F2017%2F09%2F11%2Fwordpress%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[万网购买域名，搬瓦工买服务器建数据库，搭建wordpress完毕。 个站：风声木 2020.02.02 升级折腾记： 1. 后台用lnmp升级php7，mySQL无法启动。 鸣谢：Joey cd &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F; cp &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysqld &#x2F;etc&#x2F;init.d&#x2F;mysqld start ps -ef|grep mysqld &#x2F;&#x2F;确认一下有没有启动成功 2. 升级php7后，原phpmysql无法使用。需下载php70w-mysql。 鸣谢：Florrie yum update yum install epel-release rpm -Uvh https:&#x2F;&#x2F;mirror.webstatic.com&#x2F;yum&#x2F;el6&#x2F;latest.rpm yum install php70w-mysql 3. 登录wp-admin后提示“无法连接数据库”。需修改wordpress目录下wp-config.php配置。将localhost改为127.0.0.1。 鸣谢：水果真好吃 vi &#x2F;home&#x2F;wwwroot&#x2F;域名&#x2F;wp-config.php define(&#39;DB_HOST&#39;, &#39;localhost&#39;) 修改为 define(&#39;DB_HOST&#39;, &#39;127.0.0.1&#39;) :wq lnmp stop &amp;&amp; lnmp start 4. 登录网站后始终显示lnmp默认安装页面。修改nginx配置，清除网页缓存。 鸣谢：Somnus陵 nginx配置路径： /usr/local/nginx/conf/nginx.conf vhost配置路径： /usr/local/nginx/conf/vhost/域名.conf 自此wordpress重焕新生。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[设置 SSH 使用 hexo deploy 时免输用户名密码]]></title>
      <url>%2F2017%2F04%2F23%2F%E8%AE%BE%E7%BD%AE-SSH-%E4%BD%BF%E7%94%A8-hexo-deploy%E6%97%B6%E5%85%8D%E8%BE%93%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%2F</url>
      <content type="text"><![CDATA[出处：chenjianhua 生成 SSH 密钥首先打开命令行工具，通常我们可以直接右键鼠标任意位置打开 Git Bash Here，然后输入以下命令 $ cd ~/.ssh # Checks to see if there is a directory named &quot;.ssh&quot; in your user directory 使用 ssh-keygen 生成密钥 $ ssh-keygen -t rsa -C &quot;your_email@example.com&quot; # Creates a new ssh key using the provided email Generating public/private rsa key pair. Enter file in which to save the key (/home/you/.ssh/id_rsa): 使用默认的文件名直接enter，接下来显示如下 Enter passphrase (empty for no passphrase): [Type a passphrase] Enter same passphrase again: [Type passphrase again] 按提示输入密码即可（简化流程的话在键入命令 ssh-keygen -t rsa -C &quot;your_email@example.com&quot; 以后的三次提示输入都可以直接回车跳过）。 密钥生成成功 Your identification has been saved in /home/you/.ssh/id_rsa. Your public key has been saved in /home/you/.ssh/id_rsa.pub. The key fingerprint is: …………………此处是密钥内容…………………… your_email@example.com 设置 Github 项目的 Deploy keys可以选择是在用户设置中添加密钥（Settings –&gt; SSH GPG keys）还是单个项目中添加密钥，在这里我就在我们的博客项目中添加密钥，此处以我的博客为例。在 chengjianhua.github.io 的首页菜单栏中点击 Settings –&gt; Deploy keys –&gt; Add deploy key，然后将生成的 id_rsa.pub 中的内容全选复制到 key 输入框中，然后点击 Add key 完成添加公钥。 接下来测试配置是否成功 $ ssh -T git@github.com 如果出现以下内容即表示配置完成并且成功！ Hi username! You&#39;ve successfully authenticated, but GitHub does not provide shell access. 设置博客的提交地址到了这一个步骤和大家在网上搜到的其他教程就不一样了，网上的这一步就是设置 # 切入到包含 .git 文件夹的文件夹 $ cd .deploy/ # 查看当前的传输协议 $ git remote -v origin https://github.com/USERNAME/REPOSITORY.git (fetch) origin https://github.com/USERNAME/REPOSITORY.git (push) # 修改 https 协议为 ssh 协议 $ git remote set-url origin git@github.com:USERNAME/REPOSITORY2.git 但是我根据网上的并没有用。更别提我的 blog 文件夹中包含 .git 文件夹的文件夹（好绕啊……）名字是 .deploy_git 了。还有我输入 $ git remote -v 时的显示结果为空，我尝试过自己添加 $ git remote add origin git@github.com:chengjianhua/chengjianhua.github.io.git,然后 $ hexo deploy 还是需要输入密码。 解决办法出来了！ 在 hexo deploy 的控制台输出结果中我看到了链接仍然是 https 的链接，这时我想到了 hexo 的配置文件 _config.yml 中的 deploy 属性。 deploy: type: git repo: git@github.com:chengjianhua/chengjianhua.github.io.git branch: master 我将其中的 repo修改成了`git@github.com:chengjianhua/chengjianhua.github.io.git，这个时候我再尝试了$ hexo deploy` 果然成功了，就不用输入密码了！ 到此我的解决方法已经完成了，希望能帮到使用 hexo 的同学们~]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Personal Blog Solutions]]></title>
      <url>%2F2017%2F04%2F21%2Fpersonal-blog-solutions%2F</url>
      <content type="text"><![CDATA[关于搭建personal blog，手段可谓繁多。 一、博客程序 FarBox、Jekyll、Octopress、ghost、marboo、Hexo、Medium、Logdown、prose.io、Scriptogr、Calepin、Wordpress FarboxJekyllOctopressghostmarboo 二、博客站点 Lofter、blogbus、不老歌 lofterblogbus不老歌 三、Wiki应用 zim、tiddlywiki、weavi zimwikitiddlywikiWeavi]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo文章简单加密访问]]></title>
      <url>%2F2017%2F04%2F20%2FHexo%E6%96%87%E7%AB%A0%E7%AE%80%E5%8D%95%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE%2F</url>
      <content type="text"><![CDATA[即使是最简单的密码功能也足以阻止90%的访问者 Hexo文章简单加密访问出处：https://lancelot_lewis.coding.me/2016/12/01/blog/hexo-password/ 一、前言一开始使用Hexo的时候，是喜欢它的简单：因为可以直接编译成纯静态文件，方便部署。可是在使用过程中，又发现诸多不便：也因为它全是纯静态页面。突发奇想，能不能给文章加上一个加密访问的功能…… 在经过实践之后，运用到自己博客中，发现有不少的访客对这个功能甚是感兴趣，所以也就在这里找个时间写写自己加密的小诀窍吧算是。 二、原理由于 Hexo 最终编译出来的文件是纯静态的，也就意味着文章的所有信息其实还是原封不动展示在页面中的，当你输入一篇文章的网址，所有的内容就已经跟随网络传输过来了。那我博客使用的加密是怎么实现的呢？ 这就要讲到 js 的阻塞机制了，在以往的经验中，当页面中有调用alert();函数的时候，整个页面会停止运行，直到你点击确定之后，页面的中的代码才会继续执行下去。我们这里需要的也是这样一个假象，阻止整个页面的渲染，直到你输入了正确的密码才能让页面继续渲染实际的文章。可是alert只有提醒的功能，没有输入的功能，所以这里要用到的是promt函数。例子参见如下： var password = promt(&#39;请输入文章密码&#39;); alert(password); 三、实践究竟要把上述代码加在哪里呢？找到themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件。按道理是添加在任何地方都行，但是推荐加在所有的&lt;meta&gt;标签之后，个人建议，仅做参考。以下是我加的代码： &lt;script&gt; (function(){ if(&#39;{{ page.password }}&#39;){ if (prompt(&#39;请输入文章密码&#39;,&#39;&#39;) !== &#39;{{ page.password }}&#39;){ alert(&#39;密码错误！&#39;); history.back(); } } })(); &lt;/script&gt; 如果你好奇page.password是什么东西，那么恭喜你，你对 Hexo 的结构还是很熟悉的。page这个变量就是你在hexo new的时候生成文件中最顶部的东西，以下我给出这篇文章的头部参考： --- title: Hexo文章简单加密访问 date: 2016-12-01 10:45:29 tags: hexo categories: 博客 keywords: - Hexo - 加密 description: 文章访问密码：password password: password --- 这样我们就好像使用静态页面完成了部分只有动态页面能完成的东西。 四、总结本来只是简单的纯静态页面，但是经历不断的更新和改进，便有了静态页面统计访问量的工具；有了静态页面添加评论的工具；甚至有了静态页面进行搜索的功能等等。个人想出来的静态页面加密功能根本算不上技术上的创新，只能说是一点小技巧的应用吧，小技巧也能迷惑住大家的眼睛，也算是喜事一件。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F04%2F19%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
